USE [CONFINS]
GO
/****** Object:  StoredProcedure [dbo].[spEOD_WriteOffAutomatic]    Script Date: 11/16/2021 3:45:26 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






--=========================================================================================================--  
-- Author:        Yossef Pancho  
-- Create date:   03-08-2012  
-- Description:   SP untuk melakukan write off otomatis setelah stopaccruedauto  
/*	  
 
	Modified : 1. Yossef 15-08-2012 - Menambahkan kondisi pengecekan prepaidholdstatus bukan dari defaultstatus saja  
 
			   2. Rubianto 08-09-2012 - Tambahkan pengakuan sisa amortisasi  
 
			   3. Rubianto 12-09-2012 - Ikutin perubahan nilai WO amount seperti di aplikasi yaitu dari NA Amt - NA Paid - NA Waived + Repo Fee + Ins Due  
 
			   4. Rubianto 17-09-2012 - Tambahkan insert ke AMRTZ_TRX  
 
			   5. Rubianto 19-09-2012 - Tambahkan pindah bucket ke bucket remedial  
 
			   6. Rubianto 25-09-2012 - Tambahkan pengecekan hanya memproses yang belum belum di RAL/Repo  
 
			   7. Yossef   27-11-2012 - Tambahkan nilai ARLifeIns pada WO_AMT  
 
			                          - Mengupdate nilai agrmnt_accmnt -> InsDueWaived, ARLifeInsWaived dan RepoFeeWaived  
 
			   8. Rubianto 03-12-2012 - Di Tafs proses ini hanya dijalankan setiap akhir bulan  
 
			   9. John	   21-12-2017 - Agrmnt yang pledge to fund Joint Finance dan IS_WITH_RECOURSE =1 tidak ikut ter-WO otomatis  
 
			   10. Komang.ba 24-07-2018 - Update RAL Exp otomatis  
 
			   11. Andy		27-11-2018 - Edit update ral apv menjadi rls, ral req menjadi rjc, dan update refassetstat 

			   12. Davin 23-06-2020 - Komen EXEC spInsertNegativeCustomer 
   */
-- ========================================================================================================--  
ALTER PROCEDURE [dbo].[spEOD_WriteOffAutomatic] @BusinessDate DATETIME
	--@RefOfficeId BIGINT  
AS
BEGIN
	SET NOCOUNT ON

	IF (DAY(DATEADD(DAY, 1, @BusinessDate)) = 1)
	BEGIN
		DECLARE @WODays INT
			, @COUNTAGR BIGINT
			, @MAXAGR BIGINT
			, @PRIORITY CHAR(1)
			, @WO_OPTION VARCHAR(50)
			, @NextBusinessDate DATETIME
			, @CollGrpId BIGINT
			, @CollBucketId BIGINT
			, @CollTypeId BIGINT
			, @CUST_ID BIGINT
			, @OFFICE_ID BIGINT
		DECLARE @LISTAGRMNT TABLE (
			SEQ_NO BIGINT IDENTITY
			, AGRMNT_ID BIGINT
			, OVER_DUE_DAYS INT
			, CUST_ID BIGINT
			, OFFICE_ID BIGINT
			)

		SELECT @WODays = GS_VALUE
		FROM GENERAL_SETTING WITH (NOLOCK)
		WHERE GS_CODE = 'MAXWRITEOFFDUEDAYS'

		SELECT @PRIORITY = GS_VALUE
		FROM GENERAL_SETTING WITH (NOLOCK)
		WHERE GS_CODE = 'PRINCIPALLLOCATION'

		SELECT @WO_OPTION = GS_VALUE
		FROM GENERAL_SETTING WITH (NOLOCK)
		WHERE GS_CODE = 'WO_OPTION'

		SET @NextBusinessDate = DATEADD(DAY, 1, @BusinessDate)

		SELECT @CollBucketId = COLL_BUCKET_ID
		FROM COLL_BUCKET WITH (NOLOCK)
		WHERE MODULE_CODE = 'REM'

		SELECT @CollTypeId = COLL_TYPE_ID
		FROM COLL_TYPE WITH (NOLOCK)
		WHERE MODULE_CODE = 'REM'

		--add by komang.ba 24-07-2018 UPDATE RAL MENJADI EXP  
		--edit by andy 27-11-2018 RUBAH APV JADI RLS, EXP JADI RJC, UPDATE REFASSETSTAT JADI NORMAL 
		DECLARE @REFASSETSTATID BIGINT

		SET @REFASSETSTATID = (
				SELECT REF_ASSET_STAT_ID
				FROM REF_ASSET_STAT
				WHERE REF_ASSET_STAT_CODE = 'NOR'
				)

		UPDATE D
		SET D.REF_ASSET_STAT_ID = @REFASSETSTATID
		FROM RAL A WITH (NOLOCK)
		INNER JOIN COLL_AGRMNT B WITH (NOLOCK)
			ON A.COLL_AGRMNT_ID = B.COLL_AGRMNT_ID
		INNER JOIN dbo.AGRMNT C WITH (NOLOCK)
			ON C.AGRMNT_ID = B.AGRMNT_ID
		INNER JOIN dbo.AGRMNT_ASSET D WITH (NOLOCK)
			ON C.AGRMNT_ID = D.AGRMNT_ID
		WHERE DATEDIFF(DAY, C.NEXT_INST_DT, @NextBusinessDate) >= @WODays
			AND A.MR_RAL_STAT IN (
				'APV'
				, 'REQ'
				)

		UPDATE b
		SET b.IS_RAL = '0'
		FROM RAL A WITH (NOLOCK)
		INNER JOIN COLL_AGRMNT B WITH (NOLOCK)
			ON A.COLL_AGRMNT_ID = B.COLL_AGRMNT_ID
		INNER JOIN dbo.AGRMNT AGR WITH (NOLOCK)
			ON AGR.AGRMNT_ID = B.AGRMNT_ID
		WHERE DATEDIFF(DAY, AGR.NEXT_INST_DT, @NextBusinessDate) >= @WODays
			AND A.MR_RAL_STAT IN (
				'APV'
				, 'REQ'
				)

		UPDATE A
		SET MR_RAL_STAT = 'RLS'
		FROM RAL A WITH (NOLOCK)
		INNER JOIN COLL_AGRMNT B WITH (NOLOCK)
			ON A.COLL_AGRMNT_ID = B.COLL_AGRMNT_ID
		INNER JOIN dbo.AGRMNT AGR WITH (NOLOCK)
			ON AGR.AGRMNT_ID = B.AGRMNT_ID
		WHERE DATEDIFF(DAY, AGR.NEXT_INST_DT, @NextBusinessDate) >= @WODays
			AND A.MR_RAL_STAT = 'APV'

		UPDATE A
		SET MR_RAL_STAT = 'RJC'
		FROM RAL A WITH (NOLOCK)
		INNER JOIN COLL_AGRMNT B WITH (NOLOCK)
			ON A.COLL_AGRMNT_ID = B.COLL_AGRMNT_ID
		INNER JOIN dbo.AGRMNT AGR WITH (NOLOCK)
			ON AGR.AGRMNT_ID = B.AGRMNT_ID
		WHERE DATEDIFF(DAY, AGR.NEXT_INST_DT, @NextBusinessDate) >= @WODays
			AND A.MR_RAL_STAT = 'REQ'

		--end add and edit 
		INSERT INTO @LISTAGRMNT (
			AGRMNT_ID
			, OVER_DUE_DAYS
			, CUST_ID
			, OFFICE_ID
			)
		SELECT AGR.AGRMNT_ID
			, DATEDIFF(DAY, AGR.NEXT_INST_DT, @NextBusinessDate)
			, AGR.CUST_ID
			, AGR.REF_OFFICE_ID
		FROM AGRMNT AGR WITH (NOLOCK)
		LEFT JOIN (
			SELECT AGRMNT_ID
			FROM WRITE_OFF_TRX WITH (NOLOCK)
			WHERE MR_WO_STAT = 'WO_REQ'
			GROUP BY AGRMNT_ID
			) QRY
			ON AGR.AGRMNT_ID = QRY.AGRMNT_ID
		LEFT JOIN (
			SELECT CA.AGRMNT_ID
			FROM COLL_AGRMNT CA WITH (NOLOCK)
			LEFT JOIN RAL WITH (NOLOCK)
				ON CA.COLL_AGRMNT_ID = RAL.COLL_AGRMNT_ID
					AND RAL.MR_RAL_STAT IN (
						'REQ'
						, 'APV'
						)
					AND RAL.MODULE_CODE = 'COLL'
			--LEFT JOIN REPO_H WITH(NOLOCK) ON CA.COLL_AGRMNT_ID = REPO_H.COLL_AGRMNT_ID  
			--AND REPO_H.MODULE_CODE='COLL'   
			WHERE CA.IS_RAL = 1
				OR RAL.COLL_AGRMNT_ID IS NOT NULL
			--OR REPO_H.COLL_AGRMNT_ID IS NOT NULL  
			GROUP BY CA.AGRMNT_ID
			) QRY_CHECK
			ON AGR.AGRMNT_ID = QRY_CHECK.AGRMNT_ID
		--John 21/12/2017 QRY_CHECK_2  
		LEFT JOIN (
			SELECT A.AGRMNT_ID
			FROM dbo.AGRMNT A WITH (NOLOCK)
			LEFT JOIN dbo.FUND_AGRMNT FA WITH (NOLOCK)
				ON FA.AGRMNT_ID = A.AGRMNT_ID
			LEFT JOIN dbo.FUND_CONTRACT FC WITH (NOLOCK)
				ON FC.FUND_CONTRACT_ID = FA.FUND_CONTRACT_ID
			LEFT JOIN dbo.FUND_CONTRACT_X FCX WITH (NOLOCK)
				ON FCX.FUND_CONTRACT_ID = FC.FUND_CONTRACT_ID
			WHERE A.IS_PLEDGE_TO_FUNDING = 1
				AND FA.PLEDGE_STAT = 'P'
				AND FC.MR_FACILITY_KIND = 'JNTFNNC'
				AND FCX.IS_WITH_RECOURSE = 1
			) QRY_CHECK_2
			ON QRY_CHECK_2.AGRMNT_ID = AGR.AGRMNT_ID
		WHERE AGR.DEFAULT_STAT = 'NA'
			AND AGR.PREPAID_HOLD_STAT = 'NA' -- By Yossef, 15-08-2012  
			AND AGR.CONTRACT_STAT IN (
				'LIV'
				, 'ICP'
				, 'INV'
				)
			AND DATEDIFF(DAY, AGR.NEXT_INST_DT, @NextBusinessDate) >= @WODays
			--AND AGR.REF_OFFICE_ID = @RefOfficeId  
			AND QRY.AGRMNT_ID IS NULL
			AND QRY_CHECK.AGRMNT_ID IS NULL
			AND QRY_CHECK_2.AGRMNT_ID IS NULL --John 21/12/2017  

		SELECT @COUNTAGR = MIN(SEQ_NO)
		FROM @LISTAGRMNT

		SELECT @MAXAGR = MAX(SEQ_NO)
		FROM @LISTAGRMNT

		WHILE @COUNTAGR < = @MAXAGR
		BEGIN
			--=================================================--  
			--			     REGION SELECT DATA                --  
			--=================================================--  
			DECLARE @AGR_ID BIGINT
				, @WO_NO VARCHAR(20)
				, @DAYS_OVER_DUE INT = 0
				, @PRINCIPAL_AMT NUMERIC(17, 2) = 0
				, @INTEREST_AMT NUMERIC(17, 2) = 0
				, @INST_SEQ_NO_PAID BIGINT
				, @PRINUNDUE NUMERIC(17, 2) = 0
				, @INTERESTUNDUE NUMERIC(17, 2) = 0
				, @PRINDUE NUMERIC(17, 2) = 0
				, @INTERESTDUE NUMERIC(17, 2) = 0
				, @PRINPAID NUMERIC(17, 2) = 0
				, @INTERESTPAID NUMERIC(17, 2) = 0
				, @INSTPARPAID NUMERIC(17, 2) = 0
				, @PRINCIPLEPARTIALPAID NUMERIC(17, 2) = 0
				, @INTERESTPARTIALPAID NUMERIC(17, 2) = 0
				, @TOTALPRINCIPLEDUE NUMERIC(17, 2) = 0
				, @TOTALINTERESTDUE NUMERIC(17, 2) = 0

			SELECT @AGR_ID = AGRMNT_ID
				, @DAYS_OVER_DUE = OVER_DUE_DAYS
				, @CUST_ID = CUST_ID
				, @OFFICE_ID = OFFICE_ID
			FROM @LISTAGRMNT
			WHERE SEQ_NO = @COUNTAGR

			SELECT @CollGrpId = COLL_GRP.COLL_GRP_ID
			FROM FIELD_COLL_GRP_OFFICE WITH (NOLOCK)
			INNER JOIN COLL_GRP WITH (NOLOCK)
				ON FIELD_COLL_GRP_OFFICE.COLL_GRP_ID = COLL_GRP.COLL_GRP_ID
			WHERE COLL_GRP.MODULE_CODE = 'REM'
				AND FIELD_COLL_GRP_OFFICE.REF_OFFICE_ID = @OFFICE_ID

			IF @DAYS_OVER_DUE IS NULL
			BEGIN
				SET @DAYS_OVER_DUE = 0
			END

			SELECT @INST_SEQ_NO_PAID = MAX(INST_SEQ_NO)
			FROM INST_SCHDL WITH (NOLOCK)
			WHERE AGRMNT_ID = @AGR_ID
				AND INST_PAID_DATE IS NOT NULL
				AND (INST_AMT - INST_PAID_AMT - INST_WAIVED_AMT) > 0

			IF @INST_SEQ_NO_PAID IS NOT NULL
				OR @INST_SEQ_NO_PAID != 0
			BEGIN
				SELECT @PRINCIPAL_AMT = PRINCIPAL_AMT
					, @INTEREST_AMT = INTEREST_AMT
					, @INSTPARPAID = INST_PAID_AMT
				FROM INST_SCHDL WITH (NOLOCK)
				WHERE AGRMNT_ID = @AGR_ID
					AND INST_SEQ_NO = @INST_SEQ_NO_PAID
			END

			SELECT @PRINUNDUE = SUM(PRINCIPAL_AMT)
				, @INTERESTUNDUE = SUM(INTEREST_AMT)
			FROM INST_SCHDL WITH (NOLOCK)
			WHERE AGRMNT_ID = @AGR_ID
				AND DUE_DT > @NextBusinessDate

			SELECT @PRINDUE = SUM(PRINCIPAL_AMT)
				, @INTERESTDUE = SUM(INTEREST_AMT)
			FROM INST_SCHDL WITH (NOLOCK)
			WHERE AGRMNT_ID = @AGR_ID
				AND DUE_DT <= @NextBusinessDate

			SELECT @PRINPAID = SUM(PRINCIPAL_AMT)
				, @INTERESTPAID = SUM(INTEREST_AMT)
			FROM INST_SCHDL WITH (NOLOCK)
			WHERE AGRMNT_ID = @AGR_ID
				AND (INST_AMT - INST_PAID_AMT - INST_WAIVED_AMT) <= 0

			SET @PRINCIPAL_AMT = ISNULL(@PRINCIPAL_AMT, 0)
			SET @INTEREST_AMT = ISNULL(@INTEREST_AMT, 0)
			SET @PRINUNDUE = ISNULL(@PRINUNDUE, 0)
			SET @INTERESTUNDUE = ISNULL(@INTERESTUNDUE, 0)
			SET @PRINDUE = ISNULL(@PRINDUE, 0)
			SET @INTERESTDUE = ISNULL(@INTERESTDUE, 0)
			SET @PRINPAID = ISNULL(@PRINPAID, 0)
			SET @INTERESTPAID = ISNULL(@INTERESTPAID, 0)
			SET @INSTPARPAID = ISNULL(@INSTPARPAID, 0)

			--===================================================================================--  
			--           UNTUK MENDAPATKAN PRINCIPLE DUE DAN INTEREST_DUE                        --  
			--===================================================================================--  
			IF @PRIORITY = '0' -- ALLOCATE INTEREST FIRST  
			BEGIN
				IF @INSTPARPAID >= @INTEREST_AMT
				BEGIN
					SET @PRINCIPLEPARTIALPAID = @INSTPARPAID - @INTEREST_AMT
					SET @INTERESTPARTIALPAID = @INTEREST_AMT
				END
				ELSE
				BEGIN
					SET @INTERESTPARTIALPAID = @INSTPARPAID
					SET @PRINCIPLEPARTIALPAID = 0
				END
			END
			ELSE -- ALLOCATE PRINCIPLE FIRST   
			BEGIN
				IF @INSTPARPAID >= @PRINCIPAL_AMT
				BEGIN
					SET @PRINCIPLEPARTIALPAID = @PRINCIPAL_AMT
					SET @INTERESTPARTIALPAID = @INSTPARPAID - @PRINCIPAL_AMT
				END
				ELSE
				BEGIN
					SET @PRINCIPLEPARTIALPAID = @INSTPARPAID
					SET @INTERESTPARTIALPAID = 0
				END
			END

			SET @TOTALPRINCIPLEDUE = @PRINDUE - (@PRINPAID + @PRINCIPLEPARTIALPAID)
			SET @TOTALINTERESTDUE = @INTERESTDUE - (@INTERESTPAID + @INTERESTPARTIALPAID)

			--====================================================================================--  
			--==================================================================================--  
			-- AMBIL NILAI DARI TABEL NON_ACCRUAL_TRX TERBARU KARENA SUDAH PASTI JALAN INI DULU --  
			--==================================================================================--  
			DECLARE @NA_UCI_AMT NUMERIC(17, 2) = 0
				, @NA_REVERSE_AMT NUMERIC(17, 2) = 0
				, @ACCRUED_INTEREST_AMT NUMERIC(17, 2) = 0
				, @NA_ID BIGINT

			SELECT @NA_ID = NON_ACCRUAL_TRX_ID
				, @NA_UCI_AMT = UCI_AMT
				, @NA_REVERSE_AMT = REVERSE_AMT
				, @ACCRUED_INTEREST_AMT = ACCRUED_INTEREST_AMT
			FROM NON_ACCRUAL_TRX WITH (NOLOCK)
			WHERE AGRMNT_ID = @AGR_ID
				AND MR_NA_STAT = 'NA_EXE'

			EXEC spGenerateTransactionNo @NextBusinessDate
				, @OFFICE_ID
				, 'WO'
				, @WO_NO OUTPUT

			/*===========================  AMORTIZATION ===================================================*/
			INSERT INTO AMRTZ_ITEM_SCHDL_D (
				AMRTZ_ITEM_SCHDL_H_ID
				, ACCRUED_DT
				, ACCRUED_AMT
				, RECOGNIZE_STAT
				, REF_CURR_ID
				, LAST_DUE
				, NEXT_DUE
				, START_PERIOD
				, END_PERIOD
				, RECOGNIZE_DAYS
				, CURR_RATE_PRCNT
				, DTM_UPD
				, USR_UPD
				, DTM_CRT
				, USR_CRT
				, TRX_NO
				, JOURNAL_CODE
				)
			SELECT AmrtzH.AMRTZ_ITEM_SCHDL_H_ID
				, @NextBusinessDate
				, AmrtzH.ACCRUED_PLAN_AMT - AmrtzH.ACCRUED_AMT
				, --AccruedAmt,  
				'D'
				, Agr.REF_CURR_ID
				, ISNULL(PREV.DUE_DT, Agr.EFFECTIVE_DT)
				, AmrtzInst.DUE_DT
				, ISNULL(AmrtzH.LAST_ACCRUED_DT, ISNULL(PREV.DUE_DT, Agr.EFFECTIVE_DT))
				, --StartPeriod,  
				AmrtzInst.DUE_DT
				, --EndPeriod,  
				DATEDIFF(DAY, ISNULL(AmrtzH.LAST_ACCRUED_DT, ISNULL(PREV.DUE_DT, Agr.EFFECTIVE_DT)), AmrtzInst.DUE_DT)
				, --RecognizeDays,  
				QryExchRate.EXCHANGE_RATE_AMT
				, GETDATE()
				, SYSTEM_USER
				, GETDATE()
				, SYSTEM_USER
				, @WO_NO
				, NULL
			FROM AMRTZ_ITEM_SCHDL_H AmrtzH WITH (NOLOCK)
			INNER JOIN AMRTZ_INST_SCHDL AmrtzInst WITH (NOLOCK)
				ON AmrtzH.INST_SCHDL_ID = AmrtzInst.INST_SCHDL_ID
			INNER JOIN INST_SCHDL Inst WITH (NOLOCK)
				ON AmrtzInst.INST_SCHDL_ID = Inst.INST_SCHDL_ID
			INNER JOIN AGRMNT Agr WITH (NOLOCK)
				ON INST.AGRMNT_ID = Agr.AGRMNT_ID
			LEFT JOIN INST_SCHDL PREV WITH (NOLOCK)
				ON Inst.AGRMNT_ID = PREV.AGRMNT_ID
					AND Inst.INST_SEQ_NO - 1 = PREV.INST_SEQ_NO
			INNER JOIN (
				SELECT MAX(ER.EXCHANGE_RATE_AMT) AS EXCHANGE_RATE_AMT
					, ER.REF_CURR_ID
				FROM (
					SELECT REF_CURR_ID
						, MAX(CURR_DT) AS MAX_CURR_DT
					FROM EXCHANGE_RATE WITH (NOLOCK)
					GROUP BY REF_CURR_ID
					) QryExcRate
				INNER JOIN EXCHANGE_RATE ER WITH (NOLOCK)
					ON QryExcRate.REF_CURR_ID = ER.REF_CURR_ID
						AND QryExcRate.MAX_CURR_DT = ER.CURR_DT
				GROUP BY ER.REF_CURR_ID
				) QryExchRate
				ON Agr.REF_CURR_ID = QryExchRate.REF_CURR_ID
			WHERE Agr.AGRMNT_ID = @AGR_ID
				AND AmrtzH.ACCRUED_AMT <> AmrtzH.ACCRUED_PLAN_AMT

			IF @@ERROR <> 0
			BEGIN
				GOTO EXITSP
			END

			UPDATE AMRTZ_ITEM_SCHDL_H
			SET ACCRUED_AMT = ACCRUED_PLAN_AMT
				, LAST_ACCRUED_DT = @NextBusinessDate
				, DTM_UPD = GETDATE()
				, USR_UPD = SYSTEM_USER
			FROM INST_SCHDL Inst WITH (NOLOCK)
			WHERE AMRTZ_ITEM_SCHDL_H.INST_SCHDL_ID = Inst.INST_SCHDL_ID
				AND AMRTZ_ITEM_SCHDL_H.ACCRUED_AMT <> AMRTZ_ITEM_SCHDL_H.ACCRUED_PLAN_AMT
				AND Inst.AGRMNT_ID = @AGR_ID

			IF @@ERROR <> 0
			BEGIN
				GOTO EXITSP
			END

			--============================= AMRTZ_TRX ======================================--  
			INSERT INTO AMRTZ_TRX (
				[AGRMNT_AMRTZ_ITEM_ID]
				, [MR_AMRTZ_TRX_CODE]
				, [TRX_NO]
				, [MR_AMRTZ_TRX_ITEM_CODE]
				, [ITEM_AMT]
				, [USR_UPD]
				, [DTM_UPD]
				, [USR_CRT]
				, [DTM_CRT]
				)
			SELECT AAI.AGRMNT_AMRTZ_ITEM_ID
				, 'WRITEOFF'
				, @WO_NO
				, RPA.PAYMENT_ALLOC_CODE
				, AAI.ACCRUED_PLAN_AMT - AAI.ACCRUED_AMT
				, SYSTEM_USER
				, GETDATE()
				, SYSTEM_USER
				, GETDATE()
			FROM AGRMNT_AMRTZ_ITEM AAI WITH (NOLOCK)
			INNER JOIN REF_AMRTZ_ITEM RAI WITH (NOLOCK)
				ON AAI.REF_AMRTZ_ITEM_CODE = RAI.REF_AMRTZ_ITEM_CODE
			INNER JOIN TRX_TYPE_REF_PAYMENT_ALLOC TRP WITH (NOLOCK)
				ON RAI.REF_PAYMENT_ALLOC_ID = TRP.REF_PAYMENT_ALLOC_ID
			INNER JOIN REF_PAYMENT_ALLOC RPA WITH (NOLOCK)
				ON TRP.TRX_REF_PAYMENT_ALLOC_ID = RPA.REF_PAYMENT_ALLOC_ID
			WHERE AAI.AGRMNT_ID = @AGR_ID
				AND TRP.TRX_TYPE_CODE = 'WRITEOFF'

			IF @@ERROR <> 0
			BEGIN
				GOTO EXITSP
			END

			UPDATE AGRMNT_AMRTZ_ITEM
			SET ACCRUED_AMT = ACCRUED_PLAN_AMT
				, OS_ACCRUED_PLAN_AMT = 0
				, LAST_ACCRUED_DT = @NextBusinessDate
				, DTM_UPD = GETDATE()
				, USR_UPD = SYSTEM_USER
			WHERE AGRMNT_ID = @AGR_ID

			IF @@ERROR <> 0
			BEGIN
				GOTO EXITSP
			END

			/*=============================================================================================*/
			/*====================================  REPO FEE ==============================================*/
			--================================--  
			-- REPO FEE DAN AR LIFE INSURANCE --  
			--================================--  
			DECLARE @ARLIFEINS NUMERIC(17, 2)
				, @REPOFEE NUMERIC(17, 2)

			SELECT @ARLIFEINS = CHARGE_RECEIVABLE_AMT - CHARGE_RECEIVABLE_PAID_AMT - CHARGE_RECEIVABLE_WAIVED_AMT
			FROM CHARGE_RECEIVABLE
			WHERE CHARGE_RECEIVEABLE_TYPE_ID = (
					SELECT CHARGE_RECEIVABLE_TYPE_ID
					FROM CHARGE_RECEIVABLE_TYPE A
					INNER JOIN REF_PAYMENT_ALLOC B
						ON A.REF_PAYMENT_ALLOC_ID = B.REF_PAYMENT_ALLOC_ID
					WHERE B.PAYMENT_ALLOC_CODE = 'ARLIFEINSUR'
					)
				AND AGRMNT_ID = @AGR_ID

			IF ISNULL(@ARLIFEINS, 0) > 0
			BEGIN
				UPDATE CHARGE_RECEIVABLE
				SET CHARGE_RECEIVABLE_WAIVED_AMT = CHARGE_RECEIVABLE_WAIVED_AMT + ISNULL(@ARLIFEINS, 0)
				WHERE AGRMNT_ID = @AGR_ID
					AND CHARGE_RECEIVEABLE_TYPE_ID = (
						SELECT CHARGE_RECEIVABLE_TYPE_ID
						FROM CHARGE_RECEIVABLE_TYPE A
						INNER JOIN REF_PAYMENT_ALLOC B
							ON A.REF_PAYMENT_ALLOC_ID = B.REF_PAYMENT_ALLOC_ID
						WHERE B.PAYMENT_ALLOC_CODE = 'ARLIFEINSUR'
						)
			END

			SELECT @REPOFEE = CHARGE_RECEIVABLE_AMT - CHARGE_RECEIVABLE_PAID_AMT - CHARGE_RECEIVABLE_WAIVED_AMT
			FROM CHARGE_RECEIVABLE
			WHERE CHARGE_RECEIVEABLE_TYPE_ID = (
					SELECT CHARGE_RECEIVABLE_TYPE_ID
					FROM CHARGE_RECEIVABLE_TYPE A
					INNER JOIN REF_PAYMENT_ALLOC B
						ON A.REF_PAYMENT_ALLOC_ID = B.REF_PAYMENT_ALLOC_ID
					WHERE B.PAYMENT_ALLOC_CODE = 'REPOFEE'
					)
				AND AGRMNT_ID = @AGR_ID

			IF ISNULL(@REPOFEE, 0) > 0
			BEGIN
				UPDATE CHARGE_RECEIVABLE
				SET CHARGE_RECEIVABLE_WAIVED_AMT = CHARGE_RECEIVABLE_WAIVED_AMT + ISNULL(@REPOFEE, 0)
				WHERE CHARGE_RECEIVEABLE_TYPE_ID = (
						SELECT CHARGE_RECEIVABLE_TYPE_ID
						FROM CHARGE_RECEIVABLE_TYPE A
						INNER JOIN REF_PAYMENT_ALLOC B
							ON A.REF_PAYMENT_ALLOC_ID = B.REF_PAYMENT_ALLOC_ID
						WHERE B.PAYMENT_ALLOC_CODE = 'REPOFEE'
						)
					AND AGRMNT_ID = @AGR_ID
			END

			--================================--  
			/*=============================================================================================*/
			IF @NA_ID IS NOT NULL
			BEGIN
				INSERT INTO WRITE_OFF_TRX (
					[WO_NO]
					, [AGRMNT_ID]
					, [REQ_DT]
					, [EXE_DT]
					, [OVER_DUE_DAYS]
					, [WO_AMT]
					, [REVERSE_AMT]
					, [UCI_AMT]
					, [OS_PRINCIPAL_UNDUE_AMT]
					, [OS_INTEREST_UNDUE_AMT] --10  
					, [OS_PRINCIPAL_DUE_AMT]
					, [OS_INTEREST_DUE_AMT]
					, [INS_DUE_AMT]
					, [ACCRUED_INTEREST_AMT]
					, [USR_UPD]
					, [DTM_UPD]
					, [USR_CRT]
					, [DTM_CRT]
					, [WO_OPTION]
					, [REPOSSESSION_FEE_AMT] --20  
					, [MR_WO_STAT]
					, [OS_CHARGE_RCV_DUE_AMT]
					, [OS_INST_AMT]
					, [OS_LC_INST_DUE_AMT]
					, [OS_LC_INST_ADM_FEE_DUE_AMT]
					, [OS_INS_DUE_AMT]
					, [OS_LC_INS_DUE_AMT]
					, [WO_PRINCIPAL_AMT]
					, [IS_WO_NORMAL]
					, [WO_TYPE] --30  
					, [JOURNAL_NO]
					, [ARLIFEINS_AMT]
					)
				SELECT @WO_NO
					, @AGR_ID
					, @NextBusinessDate
					, @NextBusinessDate
					, @DAYS_OVER_DUE
					--,NA_AMT - NA_PAID_AMT - NA_WAIVED_AMT - @NA_UCI_AMT  
					, A.OS_PRINCIPAL_AMT -- Arvin, 23-11-2018 
					--NA_AMT - NA_PAID_AMT - NA_WAIVED_AMT + ISNULL(@REPOFEE,0) + (INS_DUE_AMT - INS_DUE_PAID_AMT - INS_DUE_WAIVED_AMT)  --Rubianto, 12-09-2012   -- Arvin, 23-11-2018 
					--+ ISNULL(@ARLIFEINS,0)  -- Arvin, 23-11-2018 
					, @NA_REVERSE_AMT
					, @NA_UCI_AMT
					, @PRINUNDUE
					, @INTERESTUNDUE --10  
					, @TOTALPRINCIPLEDUE
					, @TOTALINTERESTDUE
					, INS_DUE_AMT - INS_DUE_PAID_AMT - INS_DUE_WAIVED_AMT
					, @ACCRUED_INTEREST_AMT
					, SYSTEM_USER
					, GETDATE()
					, SYSTEM_USER
					, GETDATE()
					, @WO_OPTION
					, ISNULL(@REPOFEE, 0) --20  
					, 'WO_EXE'
					, CHARGE_RCV_AMT - CHARGE_RCV_PAID_AMT - CHARGE_RCV_WAIVED_AMT
					, INST_DUE_AMT - INST_DUE_PAID_AMT - INST_DUE_WAIVED_AMT
					, LC_INST_AMT - LC_INST_PAID_AMT - LC_INST_WAIVED_AMT
					, LC_INST_ADM_FEE_AMT - LC_INST_ADM_FEE_PAID_AMT - LC_INST_ADM_FEE_WAIVED_AMT
					, INS_DUE_AMT - INS_DUE_PAID_AMT - INS_DUE_WAIVED_AMT
					, LC_INS_AMT - LC_INS_PAID_AMT - LC_INS_WAIVED_AMT
					, @PRINUNDUE + @TOTALPRINCIPLEDUE
					, '0'
					, 'A' --30  
					, NULL
					, ISNULL(@ARLIFEINS, 0)
				FROM AGRMNT_ACC_MNT WITH (NOLOCK)
				INNER JOIN AGRMNT A WITH (NOLOCK)
					ON A.AGRMNT_ID = AGRMNT_ACC_MNT.AGRMNT_ID
				WHERE AGRMNT_ACC_MNT.AGRMNT_ID = @AGR_ID

				IF @@ERROR <> 0
				BEGIN
					GOTO EXITSP
				END

				DECLARE @WRITE_OFF_ID BIGINT = 0

				SELECT @WRITE_OFF_ID = WRITE_OFF_TRX_ID
				FROM WRITE_OFF_TRX WITH (NOLOCK)
				WHERE AGRMNT_ID = @AGR_ID
					AND MR_WO_STAT = 'WO_EXE'

				INSERT INTO WRITE_OFF_TRX_D_ALLOC (
					[WRITE_OFF_TRX_ID]
					, [REF_PAYMENT_ALLOC_ID]
					, [ALLOC_AMT]
					, [DTM_CRT]
					, [DTM_UPD]
					, [USR_CRT]
					, [USR_UPD]
					)
				SELECT @WRITE_OFF_ID
					, [REF_PAYMENT_ALLOC_ID]
					, ISNULL(@REPOFEE, 0)
					, GETDATE()
					, GETDATE()
					, SYSTEM_USER
					, SYSTEM_USER
				FROM REF_PAYMENT_ALLOC WITH (NOLOCK)
				WHERE PAYMENT_ALLOC_CODE = 'REPOFEE'

				INSERT INTO WRITE_OFF_TRX_D_ALLOC (
					[WRITE_OFF_TRX_ID]
					, [REF_PAYMENT_ALLOC_ID]
					, [ALLOC_AMT]
					, [DTM_CRT]
					, [DTM_UPD]
					, [USR_CRT]
					, [USR_UPD]
					)
				SELECT @WRITE_OFF_ID
					, [REF_PAYMENT_ALLOC_ID]
					, ISNULL(@ARLIFEINS, 0)
					, GETDATE()
					, GETDATE()
					, SYSTEM_USER
					, SYSTEM_USER
				FROM REF_PAYMENT_ALLOC WITH (NOLOCK)
				WHERE PAYMENT_ALLOC_CODE = 'ARLIFEINSUR'

				--=========================================================--  
				--       UPDATE AGRMNT DAN AGRMNT_ACC_MNT                  --  
				--=========================================================--  
				UPDATE AGRMNT_ACC_MNT
				SET WO_AMT = QRYWRITEOFF.WO_AMT
					, WO_DT = @NextBusinessDate
					, INS_DUE_WAIVED_AMT = INS_DUE_AMT - INS_DUE_PAID_AMT - INS_DUE_WAIVED_AMT
					, CHARGE_RCV_WAIVED_AMT = CHARGE_RCV_WAIVED_AMT + ISNULL(@ARLIFEINS, 0) + ISNULL(@REPOFEE, 0)
					, USR_UPD = SYSTEM_USER
					, DTM_UPD = GETDATE()
				FROM (
					SELECT AGRMNT_ID
						, WO_AMT
					FROM WRITE_OFF_TRX WITH (NOLOCK)
					WHERE AGRMNT_ID = @AGR_ID
						AND MR_WO_STAT = 'WO_EXE'
					) QRYWRITEOFF
				WHERE AGRMNT_ACC_MNT.AGRMNT_ID = @AGR_ID

				IF @@ERROR <> 0
				BEGIN
					GOTO EXITSP
				END

				UPDATE AGRMNT
				SET PREPAID_HOLD_STAT = 'WO'
					, DEFAULT_STAT = 'WO'
					, USR_UPD = SYSTEM_USER
					, DTM_UPD = GETDATE()
				WHERE AGRMNT_ID = @AGR_ID

				---- add by komang.ba 24-07-2018 UPDATE RALL MENJADI EXP  
				--UPDATE A SET MR_RAL_STAT = 'EXP'  
				--FROM RAL A WITH(NOLOCK)  
				--JOIN COLL_AGRMNT B WITH(NOLOCK) ON A.COLL_AGRMNT_ID = B.COLL_AGRMNT_ID  
				--WHERE B.AGRMNT_ID = @AGR_ID AND A.MR_RAL_STAT IN('APV','REQ')  
				----end add  
				IF @@ERROR <> 0
				BEGIN
					GOTO EXITSP
				END
						--EXEC spInsertNegativeCustomer @CUST_ID = @CUST_ID, @MR_NEGATIVE_DTA_SOURCE = 'WO', @MR_NEGATIVE_TYPE='BAD', @NOTES = 'Write Off'  
						--=========================================================--  
			END

			SET @COUNTAGR = @COUNTAGR + 1
		END

		IF @CollGrpId IS NOT NULL
			AND @CollTypeId IS NOT NULL
			AND @CollBucketId IS NOT NULL
		BEGIN
			UPDATE COLL_AGRMNT
			SET COLL_GRP_ID = @CollGrpId
				, COLL_TYPE_ID = @CollTypeId
				, COLL_BUCKET_ID = @CollBucketId
			FROM @LISTAGRMNT LIST
			WHERE COLL_AGRMNT.AGRMNT_ID = LIST.AGRMNT_ID

			IF @@ERROR <> 0
			BEGIN
				GOTO EXITSP
			END
		END
	END

	EXITSP:

	BEGIN
		RETURN
	END
END